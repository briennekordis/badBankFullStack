{"ast":null,"code":"var _jsxFileName = \"/Users/BrienneKordis/Code/Projects/React/classybank/src/Components/createaccount.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { UserContext } from \"./context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CreateAccount() {\n  _s();\n\n  const [show, setShow] = React.useState(true);\n  const [status, setStatus] = React.useState('');\n  const [name, setName] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  let users;\n  console.log(JSON.stringify(users)); // document.getElementById(\"nav1\").style.color = \"#FFF\";\n  // document.getElementById(\"nav1\").style.backgroundColor = \"#212529\";\n\n  function validate(field, label) {\n    if (!field) {\n      setStatus(`Error: ${label} must be filled out`);\n      setTimeout(() => setStatus(''), 3000);\n      return false;\n    }\n\n    return true;\n  }\n\n  function validatePassword(password) {\n    if (password < 8) {\n      setStatus(`Error: password must be at least 8 characters`);\n      setTimeout(() => setStatus(''), 3000);\n      return false;\n    }\n\n    return true;\n  }\n\n  function handleCreate() {\n    if (!validate(name, 'name')) return;\n    if (!validate(email, 'email')) return;\n    if (!validatePassword(password, 'password')) return;\n    users.push({\n      name,\n      email,\n      password,\n      balance: 100\n    });\n    UserContext.Consumer.context.setUsers(users); // console.log(JSON.stringify(users));\n\n    setShow(false);\n  }\n\n  function clearForm() {\n    setName('');\n    setEmail('');\n    setPassword('');\n    setShow(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      backgroundColor: \"lightgray\",\n      color: \"black\",\n      width: \"18rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: show ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(UserContext.Consumer, {\n          children: [context => users = context.state.users, \"Name\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"input\",\n            className: \"form-control\",\n            id: \"name\",\n            placeholder: \"Enter name\",\n            onChange: e => setName(e.currentTarget.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 158\n          }, this), \"Email address\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"input\",\n            className: \"form-control\",\n            id: \"email\",\n            placeholder: \"Enter email\",\n            onChange: e => setEmail(e.currentTarget.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 160\n          }, this), \"Password\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            id: \"password\",\n            placeholder: \"Enter password\",\n            onChange: e => setPassword(e.currentTarget.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 172\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-light\",\n            onClick: handleCreate,\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 123\n          }, this), status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-light\",\n          onClick: clearForm,\n          children: \"Add another account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateAccount, \"k+wKdO7/j57OyNJuxsP2eubgxfc=\");\n\n_c = CreateAccount;\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/Users/BrienneKordis/Code/Projects/React/classybank/src/Components/createaccount.js"],"names":["React","useContext","Card","UserContext","CreateAccount","show","setShow","useState","status","setStatus","name","setName","email","setEmail","password","setPassword","users","console","log","JSON","stringify","validate","field","label","setTimeout","validatePassword","handleCreate","push","balance","Consumer","context","setUsers","clearForm","backgroundColor","color","width","state","e","currentTarget","value"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { UserContext } from \"./context\";\n\nfunction CreateAccount() {\n    const [show, setShow] = React.useState(true);\n    const [status, setStatus] = React.useState('');\n    const [name, setName] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    let users;\n    console.log(JSON.stringify(users));\n    // document.getElementById(\"nav1\").style.color = \"#FFF\";\n    // document.getElementById(\"nav1\").style.backgroundColor = \"#212529\";\n    \n    function validate(field, label){\n        if (!field) {\n          setStatus(`Error: ${label} must be filled out`);\n          setTimeout(() => setStatus(''),3000);\n          return false;\n        }\n        return true;\n    }\n\n    function validatePassword(password) {\n        if (password < 8) {\n            setStatus(`Error: password must be at least 8 characters`);\n            setTimeout(() => setStatus(''),3000);\n            return false;\n          }\n          return true;           \n    }\n  \n    function handleCreate(){\n      if (!validate(name,     'name'))     return;\n      if (!validate(email,    'email'))    return;\n      if (!validatePassword(password, 'password')) return;\n      users.push({name, email, password, balance:100});\n      UserContext.Consumer.context.setUsers(users);\n      // console.log(JSON.stringify(users));\n      setShow(false);\n    }    \n  \n    function clearForm(){\n      setName('');\n      setEmail('');\n      setPassword('');\n      setShow(true);\n    }\n\n    return (\n        <Card style={{ backgroundColor: \"lightgray\", color: \"black\", width: \"18rem\" }}>\n            <Card.Header>Create Account</Card.Header>\n            <Card.Body>\n                {show ? ( \n                    <>\n                        <UserContext.Consumer>\n                            {(context) => (users = context.state.users)}\n                            Name<br/>\n                            <input type=\"input\" className=\"form-control\" id=\"name\" placeholder=\"Enter name\" onChange={e => setName(e.currentTarget.value)} /><br/>\n                            Email address<br/>\n                            <input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Enter email\" onChange={e => setEmail(e.currentTarget.value)}/><br/>\n                            Password<br/>\n                            <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter password\" onChange={e => setPassword(e.currentTarget.value)}/><br/>\n                            <button type=\"submit\" className=\"btn btn-light\" onClick={handleCreate}>Create Account</button><br/>\n                            {status}\n                        </UserContext.Consumer>\n                    </>\n                    ):( \n                    <>\n                        <h5>Success</h5>\n                        <button type=\"submit\" className=\"btn btn-light\" onClick={clearForm}>Add another account</button> \n                    </> \n                    )}\n            </Card.Body>\n        </Card>\n    );\n    }\n\nexport default CreateAccount;\n"]},"metadata":{},"sourceType":"module"}