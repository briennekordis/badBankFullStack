{"ast":null,"code":"var _jsxFileName = \"/Users/BrienneKordis/Code/Projects/React/classybank/src/Components/withdraw.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { UserContext } from \"./context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Withdraw() {\n  _s();\n\n  const [show, setShow] = React.useState(true);\n  const [status, setStatus] = React.useState('');\n  const [withdraw, setWithdraw] = React.useState(0);\n  const userContext = useContext(UserContext);\n  let users = userContext.state.users;\n  console.log(JSON.stringify(users));\n\n  function validate(num) {\n    if (isNaN(parseFloat(num))) {\n      setStatus('Error: Please enter a number');\n      setTimeout(() => setStatus(''), 3000);\n      return false;\n    }\n\n    return true;\n  }\n\n  function overdraft(num) {\n    if (num > balance) {\n      setStatus('Error: You do not have enough funds for this transaction.');\n      setTimeout(() => setStatus(''), 3000);\n      return false;\n    }\n\n    return true;\n  }\n\n  function handleSubmit() {\n    console.log(withdraw);\n    if (!validate(withdraw) || !overdraft(withdraw)) return;\n    balance -= parseFloat(withdraw); // ctx.users[0].balance = balance;\n    // event.preventDefault();\n\n    alert(`Success! Withdrew ${withdraw} : New balance ${balance}`);\n    setShow(false);\n  }\n\n  ;\n\n  function clearForm() {\n    setWithdraw(0);\n    setShow(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      backgroundColor: \"yellow\",\n      color: \"black\",\n      width: \"18rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: show ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Your balance is currently: $\", balance, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 54\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), \"Withdrawl Amount\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"input\",\n          className: \"form-control\",\n          id: \"withdraw\",\n          placeholder: \"Withdrawl Amount\",\n          value: withdraw,\n          onChange: e => setWithdraw(e.currentTarget.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 176\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-light\",\n          onClick: handleSubmit,\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 105\n        }, this), status]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Transaction Successful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-light\",\n          onClick: clearForm,\n          children: \"Make Another Withdrawl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Withdraw, \"GywZkd3E7PobtnzIlYsz2HW95aw=\");\n\n_c = Withdraw;\nexport default Withdraw;\n\nvar _c;\n\n$RefreshReg$(_c, \"Withdraw\");","map":{"version":3,"sources":["/Users/BrienneKordis/Code/Projects/React/classybank/src/Components/withdraw.js"],"names":["React","useContext","Card","UserContext","Withdraw","show","setShow","useState","status","setStatus","withdraw","setWithdraw","userContext","users","state","console","log","JSON","stringify","validate","num","isNaN","parseFloat","setTimeout","overdraft","balance","handleSubmit","alert","clearForm","backgroundColor","color","width","e","currentTarget","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,WAAT,QAA4B,WAA5B;;;;AAEA,SAASC,QAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,KAAK,CAACO,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,KAAK,CAACO,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BX,KAAK,CAACO,QAAN,CAAe,CAAf,CAAhC;AACA,QAAMK,WAAW,GAAGX,UAAU,CAACE,WAAD,CAA9B;AACA,MAAIU,KAAK,GAAGD,WAAW,CAACE,KAAZ,CAAkBD,KAA9B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeL,KAAf,CAAZ;;AAEA,WAASM,QAAT,CAAkBC,GAAlB,EAAsB;AACpB,QAAIC,KAAK,CAACC,UAAU,CAACF,GAAD,CAAX,CAAT,EAA4B;AAC1BX,MAAAA,SAAS,CAAC,8BAAD,CAAT;AACAc,MAAAA,UAAU,CAAC,MAAMd,SAAS,CAAC,EAAD,CAAhB,EAAqB,IAArB,CAAV;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACH;;AAED,WAASe,SAAT,CAAmBJ,GAAnB,EAAuB;AACrB,QAAIA,GAAG,GAAGK,OAAV,EAAmB;AACjBhB,MAAAA,SAAS,CAAC,2DAAD,CAAT;AACAc,MAAAA,UAAU,CAAC,MAAMd,SAAS,CAAC,EAAD,CAAhB,EAAqB,IAArB,CAAV;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;;AAED,WAASiB,YAAT,GAAwB;AACtBX,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,QAAI,CAACS,QAAQ,CAACT,QAAD,CAAT,IAAwB,CAACc,SAAS,CAACd,QAAD,CAAtC,EACC;AACDe,IAAAA,OAAO,IAAIH,UAAU,CAACZ,QAAD,CAArB,CAJsB,CAKtB;AACA;;AACAiB,IAAAA,KAAK,CAAE,qBAAoBjB,QAAS,kBAAiBe,OAAQ,EAAxD,CAAL;AACAnB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AAAA;;AAEC,WAASsB,SAAT,GAAoB;AAClBjB,IAAAA,WAAW,CAAC,CAAD,CAAX;AACAL,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEuB,MAAAA,eAAe,EAAE,QAAnB;AAA6BC,MAAAA,KAAK,EAAE,OAApC;AAA6CC,MAAAA,KAAK,EAAE;AAApD,KAAb;AAAA,4BACI,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,gBACK1B,IAAI,gBACD;AAAA,mDAC6BoB,OAD7B,eACqC;AAAA;AAAA;AAAA;AAAA,gBADrC,eAEA;AAAA;AAAA;AAAA;AAAA,gBAFA,mCAGgB;AAAA;AAAA;AAAA;AAAA,gBAHhB,eAIA;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAC,cAA9B;AAA6C,UAAA,EAAE,EAAC,UAAhD;AAA2D,UAAA,WAAW,EAAC,kBAAvE;AAA0F,UAAA,KAAK,EAAEf,QAAjG;AAA2G,UAAA,QAAQ,EAAEsB,CAAC,IAAIrB,WAAW,CAACqB,CAAC,CAACC,aAAF,CAAgBC,KAAjB;AAArI;AAAA;AAAA;AAAA;AAAA,gBAJA,eAI+J;AAAA;AAAA;AAAA;AAAA,gBAJ/J,eAKA;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,eAAhC;AAAgD,UAAA,OAAO,EAAER,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA,eAKwF;AAAA;AAAA;AAAA;AAAA,gBALxF,EAMClB,MAND;AAAA,sBADC,gBAUD;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,eAAhC;AAAgD,UAAA,OAAO,EAAEoB,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAXR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAjEQxB,Q;;KAAAA,Q;AAmET,eAAeA,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { UserContext } from \"./context\";\n\nfunction Withdraw(){\n  const [show, setShow] = React.useState(true);\n  const [status, setStatus] = React.useState('');\n  const [withdraw, setWithdraw] = React.useState(0);\n  const userContext = useContext(UserContext);\n  let users = userContext.state.users;\n  console.log(JSON.stringify(users));\n\n  function validate(num){\n    if (isNaN(parseFloat(num))) {\n      setStatus('Error: Please enter a number');\n      setTimeout(() => setStatus(''),3000);\n      return false;\n    }\n    return true;\n}  \n\nfunction overdraft(num){\n  if (num > balance) {\n    setStatus('Error: You do not have enough funds for this transaction.');\n    setTimeout(() => setStatus(''),3000);\n    return false;\n  }\n  return true;\n}  \n\nfunction handleSubmit() {\n  console.log(withdraw);\n  if (!validate(withdraw) || (!overdraft(withdraw)))   \n   return;\n  balance -= parseFloat(withdraw);\n  // ctx.users[0].balance = balance;\n  // event.preventDefault();\n  alert(`Success! Withdrew ${withdraw} : New balance ${balance}`);\n  setShow(false);\n};\n\n  function clearForm(){\n    setWithdraw(0);\n    setShow(true);\n  }\n  \n  return (\n    <Card style={{ backgroundColor: \"yellow\", color: \"black\", width: \"18rem\" }}>\n        <Card.Header>Withdraw</Card.Header>\n        <Card.Body>\n            {show ? (  \n                <>\n                Your balance is currently: ${balance}<br/>\n                <br/>\n                Withdrawl Amount<br/>\n                <input type=\"input\" className=\"form-control\" id=\"withdraw\" placeholder=\"Withdrawl Amount\" value={withdraw} onChange={e => setWithdraw(e.currentTarget.value)}/><br/>\n                <button type=\"submit\" className=\"btn btn-light\" onClick={handleSubmit}>Withdraw</button><br/>\n                {status}\n                </>\n                ):(\n                <>\n                <h5>Transaction Successful</h5>\n                <button type=\"submit\" className=\"btn btn-light\" onClick={clearForm}>Make Another Withdrawl</button>\n                </>\n                )}\n\n        </Card.Body>\n    </Card>\n  )\n}\n\nexport default Withdraw;"]},"metadata":{},"sourceType":"module"}